<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>AutoTask AI - Powered by EdgeTeam √ó Chipp.ai</title>
  <link rel="stylesheet" href="/css/style.css">
  <style>
    body {
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
      max-width: 900px;
      margin: 0 auto;
      padding: 20px;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      min-height: 100vh;
    }
    .header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 30px;
      background: rgba(255, 255, 255, 0.95);
      backdrop-filter: blur(10px);
      padding: 20px;
      border-radius: 16px;
      box-shadow: 0 8px 32px rgba(0,0,0,0.1);
      border: 1px solid rgba(255, 255, 255, 0.2);
    }
    .logo {
      display: flex;
      align-items: center;
      gap: 15px;
    }
    .logo img {
      height: 40px;
      width: auto;
    }
    .logo h1 {
      margin: 0;
      background: linear-gradient(135deg, #4F46E5 0%, #7C3AED 100%);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
      font-size: 1.5rem;
      font-weight: 700;
    }
    .logo .subtitle {
      color: #6B7280;
      font-size: 0.875rem;
      margin-left: 10px;
    }
    .user-info {
      display: flex;
      align-items: center;
      gap: 15px;
    }
    .user-info img {
      border-radius: 50%;
      width: 40px;
      height: 40px;
    }
    .email-card {
      background: rgba(255, 255, 255, 0.95);
      backdrop-filter: blur(10px);
      border-radius: 16px;
      padding: 24px;
      margin-bottom: 20px;
      box-shadow: 0 8px 32px rgba(0,0,0,0.1);
      border: 1px solid rgba(255, 255, 255, 0.2);
      transition: all 0.3s ease;
    }
    .email-card:hover {
      transform: translateY(-4px);
      box-shadow: 0 12px 40px rgba(0,0,0,0.15);
    }
    .email-header {
      display: flex;
      justify-content: space-between;
      margin-bottom: 15px;
    }
    .email-subject {
      font-weight: bold;
      font-size: 1.1em;
      color: #333;
    }
    .email-from, .email-date {
      color: #666;
      font-size: 0.9em;
    }
    .email-snippet {
      margin-bottom: 15px;
      color: #555;
      line-height: 1.5;
    }
    .chipp-response {
      background: linear-gradient(135deg, #4F46E5 0%, #7C3AED 100%);
      color: white;
      padding: 24px;
      border-radius: 16px;
      margin-top: 20px;
      white-space: pre-line;
      box-shadow: 0 8px 32px rgba(79, 70, 229, 0.3);
      border: 1px solid rgba(255, 255, 255, 0.1);
    }
    .chipp-response h3 {
      margin-top: 0;
      color: #fff;
      display: flex;
      align-items: center;
      gap: 8px;
    }
    .btn {
      background: linear-gradient(135deg, #4F46E5 0%, #7C3AED 100%);
      color: white;
      border: none;
      padding: 12px 24px;
      border-radius: 12px;
      cursor: pointer;
      font-size: 14px;
      font-weight: 600;
      text-decoration: none;
      display: inline-block;
      transition: all 0.3s ease;
      box-shadow: 0 4px 16px rgba(79, 70, 229, 0.3);
    }
    .btn:hover {
      transform: translateY(-2px);
      box-shadow: 0 8px 24px rgba(79, 70, 229, 0.4);
    }
    .btn-google {
      background: linear-gradient(135deg, #4285f4 0%, #1976d2 100%);
      box-shadow: 0 4px 16px rgba(66, 133, 244, 0.3);
    }
    .btn-google:hover {
      box-shadow: 0 8px 24px rgba(66, 133, 244, 0.4);
    }
    .intro {
      text-align: center;
      background: rgba(255, 255, 255, 0.95);
      backdrop-filter: blur(10px);
      padding: 48px;
      border-radius: 16px;
      box-shadow: 0 8px 32px rgba(0,0,0,0.1);
      border: 1px solid rgba(255, 255, 255, 0.2);
    }
    .actions {
      margin-bottom: 30px;
      text-align: center;
    }
    .error {
      background: linear-gradient(135deg, #FEE2E2 0%, #FECACA 100%);
      color: #DC2626;
      padding: 16px 20px;
      border-radius: 12px;
      margin-bottom: 20px;
      border: 1px solid #FCA5A5;
      font-weight: 500;
    }
    .empty-state {
      text-align: center;
      padding: 48px;
      background: rgba(255, 255, 255, 0.95);
      backdrop-filter: blur(10px);
      border-radius: 16px;
      box-shadow: 0 8px 32px rgba(0,0,0,0.1);
      border: 1px solid rgba(255, 255, 255, 0.2);
    }
    .clickup-section {
      background: rgba(255, 255, 255, 0.95);
      backdrop-filter: blur(10px);
      border-radius: 16px;
      padding: 24px;
      margin-bottom: 30px;
      box-shadow: 0 8px 32px rgba(0,0,0,0.1);
      border: 1px solid rgba(255, 255, 255, 0.2);
    }
    .clickup-status {
      display: flex;
      align-items: center;
      gap: 10px;
      margin-bottom: 15px;
    }
    .status-indicator {
      width: 12px;
      height: 12px;
      border-radius: 50%;
    }
    .status-connected { background: #10B981; }
    .status-disconnected { background: #EF4444; }
    .btn-clickup {
      background: linear-gradient(135deg, #7B68EE 0%, #9370DB 100%);
      box-shadow: 0 4px 16px rgba(123, 104, 238, 0.3);
    }
    .btn-clickup:hover {
      box-shadow: 0 8px 24px rgba(123, 104, 238, 0.4);
    }
    .workspace-selector {
      margin-top: 15px;
    }
    .workspace-selector select {
      width: 100%;
      padding: 12px;
      border-radius: 8px;
      border: 1px solid #D1D5DB;
      font-size: 14px;
      margin-bottom: 10px;
    }
    .success {
      background: linear-gradient(135deg, #D1FAE5 0%, #A7F3D0 100%);
      color: #065F46;
      padding: 16px 20px;
      border-radius: 12px;
      margin-bottom: 20px;
      border: 1px solid #6EE7B7;
      font-weight: 500;
    }
  </style>
</head>
<body>
  <div class="header">
    <div class="logo">
      <img src="/images/edgeteam-logo.png" alt="EdgeTeam Logo">
      <div>
        <h1>AutoTask AI</h1>
        <span class="subtitle">Powered by EdgeTeam √ó Chipp.ai</span>
      </div>
    </div>
    <% if (user) { %>
      <div class="user-info">
        <img src="<%= user.picture %>" alt="Profile">
        <span><%= user.name %></span>
        <a href="/auth/logout" class="btn">Logout</a>
      </div>
    <% } else { %>
      <a href="/auth/google" class="btn btn-google">üîê Login with Google</a>
    <% } %>
  </div>

  <% if (error) { %>
    <div class="error">
      <% if (error === 'auth_failed') { %>
        Authentication failed. Please try again.
      <% } else if (error === 'fetch_failed') { %>
        Failed to fetch emails. Please try again.
      <% } else if (error === 'chipp_failed') { %>
        Failed to process with Chipp.ai. Please try again.
      <% } else if (error === 'clickup_no_code') { %>
        ClickUp authorization failed - no code received. Please try again.
      <% } else if (error === 'clickup_auth_failed') { %>
        ClickUp authentication failed. Please check your credentials and try again.
      <% } else { %>
        An error occurred. Please try again.
      <% } %>
    </div>
  <% } %>

  <% if (clickupAuth === 'success') { %>
    <div class="success">
      ‚úÖ ClickUp authentication successful! Please configure your default workspace below.
    </div>
  <% } %>

  <% if (user) { %>
    <div class="actions">
      <a href="/emails/recent" class="btn">üìß Fetch Latest 5 Emails</a>
    </div>

    <!-- ClickUp Integration Section -->
    <div class="clickup-section">
      <h3>üîó ClickUp Integration</h3>
      <div class="clickup-status">
        <% if (clickup && clickup.access_token) { %>
          <div class="status-indicator status-connected"></div>
          <span>Connected to ClickUp</span>
          <% if (clickup.configured && clickup.defaultList) { %>
            <span style="margin-left: 10px; color: #10B981;">‚úì Configured (Default: <%= clickup.defaultList.name %>)</span>
          <% } else { %>
            <span style="margin-left: 10px; color: #F59E0B;">‚ö†Ô∏è Configuration needed</span>
          <% } %>
        <% } else { %>
          <div class="status-indicator status-disconnected"></div>
          <span>Not connected to ClickUp</span>
        <% } %>
      </div>

      <% if (!clickup || !clickup.access_token) { %>
        <p>Connect your ClickUp account to enable automatic task creation from emails.</p>
        <a href="/clickup/auth" class="btn btn-clickup">üîó Connect ClickUp</a>
      <% } else if (!clickup.configured) { %>
        <p>Choose your default workspace and list for task creation:</p>
        <div class="workspace-selector">
          <select id="workspaceSelect" onchange="onWorkspaceChange()">
            <option value="">Select a workspace...</option>
          </select>
          <button id="configureBtn" class="btn btn-clickup" onclick="configureClickUp()" disabled>
            ‚úÖ Configure Default List
          </button>
        </div>
      <% } else { %>
        <p>‚úÖ ClickUp is configured and ready! Tasks will be created in: <strong><%= clickup.defaultList.name %></strong></p>
        <button class="btn btn-clickup" onclick="reconfigureClickUp()">üîÑ Reconfigure</button>
      <% } %>
    </div>

    <% if (emails && emails.length > 0) { %>
      <h2>üì¨ Your Recent Emails</h2>
      <% emails.forEach(email => { %>
        <div class="email-card">
          <div class="email-header">
            <div class="email-subject"><%= email.subject %></div>
            <div class="email-date"><%= email.date %></div>
          </div>
          <div class="email-from">From: <%= email.from %></div>
          <div class="email-snippet"><%= email.snippet %></div>

          <% if (email.chippResponse) { %>
            <div class="chipp-response">
              <h3>üéØ AutoTask AI Suggestion:</h3>
              <%= email.chippResponse %>
            </div>
          <% } else { %>
            <form action="/emails/process/<%= email.id %>" method="POST">
              <button type="submit" class="btn">üöÄ Create Task from Email</button>
            </form>
          <% } %>
        </div>
      <% }) %>
    <% } else if (user) { %>
      <div class="empty-state">
        <h3>üì≠ No emails loaded yet</h3>
        <p>Click "Fetch Latest 5 Emails" to get started with AutoTask AI!</p>
      </div>
    <% } %>
  <% } else { %>
    <div class="intro">
      <h2>üéØ Welcome to AutoTask AI</h2>
      <p><strong>Powered by EdgeTeam √ó Chipp.ai</strong></p>
      <p>Transform your Gmail inbox into actionable ClickUp tasks automatically using advanced AI!</p>
      <p>This intelligent assistant analyzes your emails and suggests comprehensive task details:</p>
      <ul style="text-align: left; display: inline-block; margin: 20px 0;">
        <li>üìù Smart task titles</li>
        <li>üìã Detailed descriptions</li>
        <li>üìÖ Suggested due dates</li>
        <li>üè∑Ô∏è Priority levels</li>
        <li>üéØ Action items extraction</li>
      </ul>
      <p><strong>Login with your Google account to experience the future of email productivity.</strong></p>
    </div>
  <% } %>

  <script>
    let workspaces = [];
    let selectedWorkspace = null;

    // Load workspaces when page loads if ClickUp is connected but not configured
    <% if (user && clickup && clickup.access_token && !clickup.configured) { %>
      window.addEventListener('DOMContentLoaded', function() {
        loadWorkspaces();
      });
    <% } %>

    async function loadWorkspaces() {
      try {
        const response = await fetch('/clickup/workspaces');
        const data = await response.json();

        if (data.workspaces) {
          workspaces = data.workspaces;
          populateWorkspaceSelect();
        } else {
          console.error('Failed to load workspaces:', data.error);
        }
      } catch (error) {
        console.error('Error loading workspaces:', error);
      }
    }

    function populateWorkspaceSelect() {
      const select = document.getElementById('workspaceSelect');
      select.innerHTML = '<option value="">Select a workspace...</option>';

      workspaces.forEach((workspace, index) => {
        workspace.lists.forEach(list => {
          const option = document.createElement('option');
          option.value = JSON.stringify({
            listId: list.id,
            listName: list.name,
            spaceName: workspace.space.name,
            teamName: workspace.team.name,
            workspaceIndex: index
          });
          option.textContent = `${workspace.team.name} > ${workspace.space.name} > ${list.name}`;
          select.appendChild(option);
        });
      });
    }

    function onWorkspaceChange() {
      const select = document.getElementById('workspaceSelect');
      const configureBtn = document.getElementById('configureBtn');

      if (select.value) {
        selectedWorkspace = JSON.parse(select.value);
        configureBtn.disabled = false;
      } else {
        selectedWorkspace = null;
        configureBtn.disabled = true;
      }
    }

    async function configureClickUp() {
      if (!selectedWorkspace) {
        alert('Please select a workspace first');
        return;
      }

      try {
        const response = await fetch('/clickup/configure', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            listId: selectedWorkspace.listId,
            listName: selectedWorkspace.listName,
            spaceName: selectedWorkspace.spaceName,
            teamName: selectedWorkspace.teamName
          })
        });

        const data = await response.json();

        if (data.success) {
          alert('ClickUp configuration saved successfully!');
          window.location.reload();
        } else {
          alert('Failed to save configuration: ' + data.error);
        }
      } catch (error) {
        console.error('Error configuring ClickUp:', error);
        alert('Error configuring ClickUp. Please try again.');
      }
    }

    function reconfigureClickUp() {
      if (confirm('Are you sure you want to reconfigure your ClickUp integration?')) {
        // Reset configuration
        fetch('/clickup/configure', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ reset: true })
        }).then(() => {
          window.location.reload();
        });
      }
    }
  </script>
</body>
</html>
